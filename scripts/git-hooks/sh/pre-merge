#!/bin/sh

# Ensure the current branch is not 'main' or 'dev'
current_branch=$(git rev-parse --abbrev-ref HEAD)
if [ "$current_branch" = "main" ] || [ "$current_branch" = "dev" ]; then
  echo "Cannot merge directly into '$current_branch' branch."
  exit 1
fi

# Run the build (includes compiling, testing, etc.)
./gradlew build

# Check if build passed
if [ $? -ne 0 ]; then
  echo "Build failed, merge aborted."
  exit 1
fi

# Check if the target branch is up-to-date
for branch in main dev; do
  git fetch origin $branch
  if [ $(git rev-list HEAD...origin/$branch --count) -ne 0 ]; then
    echo "'$branch' branch is not up-to-date, please pull the latest changes."
    exit 1
  fi
done

# Ensure no uncommitted changes are present
if ! git diff-index --quiet HEAD --; then
  echo "There are uncommitted changes, please commit or stash them before merging."
  exit 1
fi

echo "Pre-merge checks passed, you can proceed with the merge."
